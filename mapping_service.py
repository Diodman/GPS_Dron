import folium
import webbrowser
import os
import tempfile
import threading

class MappingService:
    def __init__(self):
        self.temp_dir = tempfile.mkdtemp(prefix="drone_maps_")
        print(f"–ö–∞—Ä—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤: {self.temp_dir}")
    
    def create_clickable_map(self, city_name, center_point=None):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∫–∞—Ä—Ç—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ—á–µ–∫"""
        if center_point is None:
            center_point = (52.5200, 13.4050)  # –ë–µ—Ä–ª–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        
        try:
            m = folium.Map(location=center_point, zoom_start=13, tiles='OpenStreetMap')
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ—á–µ–∫
            folium.LatLngPopup().add_to(m)
            
            # –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            instructions = """
            <div style="
                position: fixed; 
                top: 10px; 
                right: 10px; 
                z-index: 1000; 
                background: rgba(255, 255, 255, 0.95);
                padding: 15px; 
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.3);
                border: 2px solid #4CAF50;
                font-family: Arial, sans-serif;
                max-width: 300px;
            ">
                <h4 style="margin: 0 0 10px 0; color: #2E7D32;">üìå –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h4>
                <p style="margin: 5px 0; font-size: 12px;">1. –ö–ª–∏–∫–Ω–∏—Ç–µ –ø–æ –∫–∞—Ä—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ—á–∫–∏</p>
                <p style="margin: 5px 0; font-size: 12px;">2. –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ—è–≤—è—Ç—Å—è –≤–æ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–º –æ–∫–Ω–µ</p>
                <p style="margin: 5px 0; font-size: 12px;">3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É</p>
                <p style="margin: 5px 0; font-size: 11px; color: #666;">–§–æ—Ä–º–∞—Ç: —à–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞ (52.123456, 13.123456)</p>
            </div>
            """
            
            m.get_root().html.add_child(folium.Element(instructions))
            
            # –°–æ–∑–¥–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
            safe_name = self._sanitize_name(city_name)
            filename = os.path.join(self.temp_dir, f"click_map_{safe_name}.html")
            
            m.save(filename)
            print(f"–ö–∞—Ä—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {filename}")
            
            return filename
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã: {e}")
            return None
    
    def create_route_map(self, city_name, route_coords):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã —Å –º–∞—Ä—à—Ä—É—Ç–æ–º"""
        if not route_coords or len(route_coords) < 2:
            print("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–µ–∫ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞")
            return None
        
        try:
            center = route_coords[len(route_coords)//2]
            m = folium.Map(location=center, zoom_start=14, tiles='OpenStreetMap')
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç
            folium.PolyLine(
                route_coords, 
                color="#4285F4", 
                weight=6, 
                opacity=0.8,
                tooltip="–ú–∞—Ä—à—Ä—É—Ç –¥—Ä–æ–Ω–∞"
            ).add_to(m)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞
            folium.Marker(
                route_coords[0], 
                popup="üü¢ –°—Ç–∞—Ä—Ç",
                icon=folium.Icon(color="green", icon="play", prefix='fa')
            ).add_to(m)
            
            folium.Marker(
                route_coords[-1], 
                popup="üî¥ –§–∏–Ω–∏—à", 
                icon=folium.Icon(color="red", icon="stop", prefix='fa')
            ).add_to(m)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ
            info_html = f"""
            <div style="font-family: Arial; padding: 10px;">
                <h4 style="color: #4285F4; margin-bottom: 10px;">–ú–∞—Ä—à—Ä—É—Ç –¥—Ä–æ–Ω–∞</h4>
                <p><strong>–ì–æ—Ä–æ–¥:</strong> {city_name}</p>
                <p><strong>–¢–æ—á–µ–∫ –º–∞—Ä—à—Ä—É—Ç–∞:</strong> {len(route_coords)}</p>
                <p><strong>–°—Ç–∞—Ä—Ç:</strong> {route_coords[0][0]:.6f}, {route_coords[0][1]:.6f}</p>
                <p><strong>–§–∏–Ω–∏—à:</strong> {route_coords[-1][0]:.6f}, {route_coords[-1][1]:.6f}</p>
            </div>
            """
            
            m.get_root().html.add_child(folium.Element(info_html))
            
            safe_name = self._sanitize_name(city_name)
            filename = os.path.join(self.temp_dir, f"route_map_{safe_name}.html")
            
            m.save(filename)
            print(f"–ö–∞—Ä—Ç–∞ –º–∞—Ä—à—Ä—É—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {filename}")
            
            return filename
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã –º–∞—Ä—à—Ä—É—Ç–∞: {e}")
            return None
    
    def open_map(self, filename):
        """–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
        if not filename or not os.path.exists(filename):
            print(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {filename}")
            return False
        
        try:
            # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å GUI
            def open_browser():
                try:
                    abs_path = os.path.abspath(filename)
                    webbrowser.open(f"file://{abs_path}")
                    print(f"–ö–∞—Ä—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∞: {abs_path}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã: {e}")
            
            threading.Thread(target=open_browser, daemon=True).start()
            return True
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–∞—Ä—Ç—ã: {e}")
            return False
    
    def _sanitize_name(self, name):
        """–û—á–∏—Å—Ç–∫–∞ –∏–º–µ–Ω–∏ –≥–æ—Ä–æ–¥–∞"""
        import re
        name = re.sub(r'[^\w\s-]', '', name)
        name = re.sub(r'[-\s]+', '_', name)
        return name.strip('_')[:50]